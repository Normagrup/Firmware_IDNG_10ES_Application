<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\IO_Toggle\IO_Toggle.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\IO_Toggle\IO_Toggle.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Thu Mar 21 10:23:43 2024
<BR><P>
<H3>Maximum Stack Usage =       4008 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ethTransceiverDoTask &rArr; webServerDoTask &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[22]">CEC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from stm32f0xx_it.o(i.RTC_IRQHandler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f0xx.o(.text)
 <LI><a href="#[18]">TIM14_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[19]">TIM15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1a]">TIM16_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1b]">TIM17_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[e]">TS_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f0xx.o(.text)
 <LI><a href="#[23]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[210]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[26]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[40]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[211]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[212]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[213]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[214]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[215]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[216]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverPrintIp
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadWriteFinish
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
</UL>

<P><STRONG><a name="[13f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesIDNGIESEventoGet
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSolicitar
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>

<P><STRONG><a name="[185]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaInit
</UL>

<P><STRONG><a name="[217]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[218]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethInputsNotifications_Tick
</UL>

<P><STRONG><a name="[21a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7a]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverPrintIp
</UL>

<P><STRONG><a name="[7e]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strindex
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverUtilsStringToIp
</UL>

<P><STRONG><a name="[20c]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[20b]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[1fd]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strindex
</UL>

<P><STRONG><a name="[2b]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverUtilsStringToIp
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
</UL>

<P><STRONG><a name="[2d]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[21b]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2f]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[37]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[35]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[21c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[21d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[21e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[3c]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[41]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[21f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[1a5]"></a>EXTI_Init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32f0xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[a0]"></a>GPIO_Init</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[a6]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[96]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraDoTask
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardDoTask
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethInputsNotifications_Tick
</UL>

<P><STRONG><a name="[99]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardDoTask
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>

<P><STRONG><a name="[97]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_w5100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardDoTask
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HardFault_Handler &rArr; historicoAdd &rArr; historicoMapPtrUsedSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthGet
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesGet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDayGet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[15a]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
</UL>

<P><STRONG><a name="[157]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
</UL>

<P><STRONG><a name="[a7]"></a>I2C_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f0xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[159]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
</UL>

<P><STRONG><a name="[158]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
</UL>

<P><STRONG><a name="[156]"></a>I2C_TransferHandling</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32f0xx_i2c.o(i.I2C_TransferHandling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
</UL>

<P><STRONG><a name="[48]"></a>IINCHIP_READ</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, w5100.o(i.IINCHIP_READ))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_w5100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_SR
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_RX_RSR
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSIPR
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_processing
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_data_processing
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_TX_FSR
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnect
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
</UL>

<P><STRONG><a name="[4d]"></a>IINCHIP_WRITE</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, w5100.o(i.IINCHIP_WRITE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_w5100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSn_PROTO
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSIPR
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSHAR
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMR
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGAR
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_processing
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_data_processing
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearSUBR
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applySUBR
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnect
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
</UL>

<P><STRONG><a name="[20a]"></a>IWDG_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
</UL>

<P><STRONG><a name="[205]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtDoTask
</UL>

<P><STRONG><a name="[208]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
</UL>

<P><STRONG><a name="[209]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
</UL>

<P><STRONG><a name="[207]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a6]"></a>NVIC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[19d]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[a1]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[5f]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[5e]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[9b]"></a>RCC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[19f]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[a5]"></a>RCC_I2CCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_I2CCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[19e]"></a>RCC_LSEConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[9d]"></a>RCC_PLLCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[9c]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1a1]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[1a0]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[9e]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1a2]"></a>RTC_AlarmCmd</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f0xx_rtc.o(i.RTC_AlarmCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_AlarmCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[1a3]"></a>RTC_AlarmStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_AlarmStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[1a4]"></a>RTC_CalibOutputCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_CalibOutputCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[53]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f0xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[57]"></a>RTC_ExitInitMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[4e]"></a>RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDayGet
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearSet
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdaySet
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdayGet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthSet
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDaySet
</UL>

<P><STRONG><a name="[51]"></a>RTC_GetITStatus</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>RTC_GetTime</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesGet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourGet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsSet
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsGet
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesSet
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourSet
</UL>

<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = RTC_IRQHandler &rArr; rtccSecondsTick &rArr; ethInputsNotifications_Tick &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a7]"></a>RTC_ITConfig</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f0xx_rtc.o(i.RTC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[55]"></a>RTC_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[ec]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngPowerOn
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderInit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graba
</UL>

<P><STRONG><a name="[58]"></a>RTC_SetAlarm</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
</UL>

<P><STRONG><a name="[5a]"></a>RTC_SetDate</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, stm32f0xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearSet
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdaySet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthSet
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDaySet
</UL>

<P><STRONG><a name="[5c]"></a>RTC_SetTime</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32f0xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsSet
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesSet
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourSet
</UL>

<P><STRONG><a name="[5b]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f0xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[ea]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f0xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderGo
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graba
</UL>

<P><STRONG><a name="[a4]"></a>SPI_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1fa]"></a>SPI_GetReceptionFIFOStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_GetReceptionFIFOStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>

<P><STRONG><a name="[5d]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f0xx_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1fb]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>

<P><STRONG><a name="[a2]"></a>SPI_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f0xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1f9]"></a>SPI_ReceiveData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_ReceiveData8))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>

<P><STRONG><a name="[a3]"></a>SPI_RxFIFOThresholdConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_RxFIFOThresholdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
</UL>

<P><STRONG><a name="[1fc]"></a>SPI_SendData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_SendData8))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[15b]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_syscfg.o(i.SYSCFG_MemoryRemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; sysTickTick &rArr; interfazTick &rArr; entradaDigitalTick
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[119]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ethtransceiver.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[221]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[222]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[223]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[224]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[62]"></a>_ping_request</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ethping.o(i._ping_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _ping_request &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPingSend
</UL>

<P><STRONG><a name="[66]"></a>_sensoresDALIcomandoArcoDirectoEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIcomandoArcoDirectoEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIcomandoArcoDirectoEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresComandoArcoDirectoEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[68]"></a>_sensoresDALIdownEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIdownEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIdownEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresDownEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[6a]"></a>_sensoresDALIgoToSceneEnviar</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIgoToSceneEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIgoToSceneEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresGoToSceneEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[6c]"></a>_sensoresDALIoffEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIoffEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = _sensoresDALIoffEnviar &rArr; daliSensoresOffEnviar &rArr; actualLevelCmdNotify &rArr; sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresOffEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[6e]"></a>_sensoresDALIonAndStepUpEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIonAndStepUpEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIonAndStepUpEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresOnAndStepUpEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[70]"></a>_sensoresDALIquerySensorStatusEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIquerySensorStatusEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIquerySensorStatusEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresQuerySensorStatusEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[72]"></a>_sensoresDALIrecallMaxLevelEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIrecallMaxLevelEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = _sensoresDALIrecallMaxLevelEnviar &rArr; daliSensoresRecallMaxLevelEnviar &rArr; actualLevelCmdNotify &rArr; sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresRecallMaxLevelEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[74]"></a>_sensoresDALIupEnviar</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i._sensoresDALIupEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresDALIupEnviar
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresUpEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1bb]"></a>_sensoresGruposAccionDAPCSet</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, sensoresgrupos.o(i._sensoresGruposAccionDAPCSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _sensoresGruposAccionDAPCSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
</UL>

<P><STRONG><a name="[1db]"></a>_sensoresGruposAccionDownSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionDownSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>

<P><STRONG><a name="[1d8]"></a>_sensoresGruposAccionGoToSceneSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionGoToSceneSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
</UL>

<P><STRONG><a name="[1b9]"></a>_sensoresGruposAccionOffSet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionOffSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1e0]"></a>_sensoresGruposAccionOnAndStepUpSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionOnAndStepUpSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionNotificar
</UL>

<P><STRONG><a name="[1de]"></a>_sensoresGruposAccionQuerySensorStatusSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionQuerySensorStatusSet))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionActualizarNivel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionDoTask
</UL>

<P><STRONG><a name="[1ba]"></a>_sensoresGruposAccionRecallMaxLevelSet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionRecallMaxLevelSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1dc]"></a>_sensoresGruposAccionUpSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAccionUpSet))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>

<P><STRONG><a name="[76]"></a>_sensoresGruposAlgunEquipoApagadoGet</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, sensoresgrupos.o(i._sensoresGruposAlgunEquipoApagadoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaDoTask
</UL>

<P><STRONG><a name="[1f2]"></a>_sensoresGruposAlgunoOperativoClear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAlgunoOperativoClear))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
</UL>

<P><STRONG><a name="[1bf]"></a>_sensoresGruposAlgunoOperativoGet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposAlgunoOperativoGet))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaInit
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionInit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaInit
</UL>

<P><STRONG><a name="[1f3]"></a>_sensoresGruposAlgunoOperativoSet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sensoresgrupos.o(i._sensoresGruposAlgunoOperativoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _sensoresGruposAlgunoOperativoSet
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
</UL>

<P><STRONG><a name="[1c1]"></a>_sensoresGruposForMeGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sensoresgrupos.o(i._sensoresGruposForMeGet))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzNotificar
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaNotificar
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionNotificar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaNotificar
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteNotificar
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaNotificar
</UL>

<P><STRONG><a name="[78]"></a>_webserverPrintIp</STRONG> (Thumb, 572 bytes, Stack size 120 bytes, webserver.o(i._webserverPrintIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _webserverPrintIp &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[7b]"></a>_webserverUtilsStringFromBufferGet</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, webserver.o(i._webserverUtilsStringFromBufferGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _webserverUtilsStringFromBufferGet &rArr; strindex &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strindex
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[7d]"></a>_webserverUtilsStringToIp</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, webserver.o(i._webserverUtilsStringToIp))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _webserverUtilsStringToIp &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[84]"></a>actualLevelAddressPerteneceGrupoGet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, actuallevel.o(i.actualLevelAddressPerteneceGrupoGet))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>

<P><STRONG><a name="[7f]"></a>actualLevelCmdNotify</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, actuallevel.o(i.actualLevelCmdNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = actualLevelCmdNotify &rArr; sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelSet
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresCambioActualLevelNotificar
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelLvlToStoreGet
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGruposAfectadosGet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelAddressPerteneceGrupoGet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGrupoGet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelDestTipoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresRecallMaxLevelEnviar
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresOffEnviar
</UL>

<P><STRONG><a name="[85]"></a>actualLevelGruposAfectadosGet</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, actuallevel.o(i.actualLevelGruposAfectadosGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = actualLevelGruposAfectadosGet &rArr; actualLevelGruposPerteneceGet
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGruposPerteneceGet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGrupoGet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelDestTipoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>

<P><STRONG><a name="[87]"></a>actualLevelGruposPerteneceGet</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, actuallevel.o(i.actualLevelGruposPerteneceGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = actualLevelGruposPerteneceGet
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGruposAfectadosGet
</UL>

<P><STRONG><a name="[81]"></a>actualLevelLvlToStoreGet</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, actuallevel.o(i.actualLevelLvlToStoreGet))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>

<P><STRONG><a name="[77]"></a>actualLevel_GrupoValoresGet</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, actuallevel.o(i.actualLevel_GrupoValoresGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelValidGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelGet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelAddressPerteneceGrupoGet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresPeticionNiveles
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunEquipoApagadoGet
</UL>

<P><STRONG><a name="[8a]"></a>applySUBR</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, w5100.o(i.applySUBR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = applySUBR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[149]"></a>arrayPop</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, utils.o(i.arrayPop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arrayPop
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
</UL>

<P><STRONG><a name="[146]"></a>arrayPush</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, utils.o(i.arrayPush))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arrayPush
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDoTask
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresEnviar
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionArrayFromStructGet
</UL>

<P><STRONG><a name="[18f]"></a>belongsGroupGet</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, config.o(i.belongsGroupGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = belongsGroupGet
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[191]"></a>belongsGroupSet</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, config.o(i.belongsGroupSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = belongsGroupSet
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[8b]"></a>blindDoTask</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, blind.o(i.blindDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = blindDoTask &rArr; blindMovDoTask
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindMovDoTask
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>blindMovDoTask</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, blind.o(i.blindMovDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = blindMovDoTask
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindDoTask
</UL>

<P><STRONG><a name="[8d]"></a>blindOpDown</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, blind.o(i.blindOpDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = blindOpDown &rArr; blindOpGotoPos &rArr; blindPosEnc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpGotoPos
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[8e]"></a>blindOpGotoPos</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, blind.o(i.blindOpGotoPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = blindOpGotoPos &rArr; blindPosEnc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosEnc
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpUp
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpDown
</UL>

<P><STRONG><a name="[183]"></a>blindOpStepDown</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, blind.o(i.blindOpStepDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = blindOpStepDown
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[182]"></a>blindOpStepUp</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, blind.o(i.blindOpStepUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = blindOpStepUp
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[181]"></a>blindOpStop</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, blind.o(i.blindOpStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = blindOpStop
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[90]"></a>blindOpUp</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, blind.o(i.blindOpUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = blindOpUp &rArr; blindOpGotoPos &rArr; blindPosEnc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpGotoPos
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[17f]"></a>blindParametersGet</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, blind.o(i.blindParametersGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = blindParametersGet
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[180]"></a>blindParametersSet</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, blind.o(i.blindParametersSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = blindParametersSet
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[91]"></a>blindPosDec</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, blind.o(i.blindPosDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = blindPosDec &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPositionGet
</UL>

<P><STRONG><a name="[8f]"></a>blindPosEnc</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, blind.o(i.blindPosEnc))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = blindPosEnc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpGotoPos
</UL>

<P><STRONG><a name="[94]"></a>blindPositionGet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, blind.o(i.blindPositionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = blindPositionGet &rArr; blindPosDec &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPosDec
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[203]"></a>blindTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, blind.o(i.blindTick))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[95]"></a>boardDoTask</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, board.o(i.boardDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = boardDoTask &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesNotificar
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133]"></a>boardGPIODirSet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.boardGPIODirSet))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idgies_esquemaGpioInit
</UL>

<P><STRONG><a name="[f1]"></a>boardGPIOPinValueGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, board.o(i.boardGPIOPinValueGet))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[13e]"></a>boardGPIOPinValueSet</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, board.o(i.boardGPIOPinValueSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = boardGPIOPinValueSet
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
</UL>

<P><STRONG><a name="[9a]"></a>boardInit</STRONG> (Thumb, 932 bytes, Stack size 176 bytes, board.o(i.boardInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = boardInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxFIFOThresholdConfig
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_I2CCLKConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[202]"></a>boardTick</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, board.o(i.boardTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = boardTick
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[a9]"></a>botoneraDoTask</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, botonera.o(i.botoneraDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488<LI>Call Chain = botoneraDoTask &rArr; configResetNetworkSettings &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupIES_Set
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtReboot
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>botoneraFailLedBlink</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, botonera.o(i.botoneraFailLedBlink))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[201]"></a>botoneraTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, botonera.o(i.botoneraTick))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[148]"></a>bytePop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, utils.o(i.bytePop))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>

<P><STRONG><a name="[145]"></a>bytePush</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, utils.o(i.bytePush))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDoTask
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresEnviar
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionArrayFromStructGet
</UL>

<P><STRONG><a name="[64]"></a>checksum</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ethping.o(i.checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ping_request
</UL>

<P><STRONG><a name="[ad]"></a>clearSUBR</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, w5100.o(i.clearSUBR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = clearSUBR &rArr; getSIPR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSIPR
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
</UL>

<P><STRONG><a name="[af]"></a>close</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, socket.o(i.close))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = close &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[167]"></a>configAdminPassGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configAdminPassGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[b0]"></a>configAdminPassSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configAdminPassSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configAdminPassSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[db]"></a>configDaliLoopDeviceTypeGet</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, config.o(i.configDaliLoopDeviceTypeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = configDaliLoopDeviceTypeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopValidByteGet
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopDeviceTypeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelGet
</UL>

<P><STRONG><a name="[b2]"></a>configDaliLoopDeviceTypeSet</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, config.o(i.configDaliLoopDeviceTypeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = configDaliLoopDeviceTypeSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngiesSalidasInit
</UL>

<P><STRONG><a name="[da]"></a>configDaliLoopInstalledGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configDaliLoopInstalledGet))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopValidByteGet
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopInstalledGet
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopDeviceTypeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelGet
</UL>

<P><STRONG><a name="[b3]"></a>configDaliLoopInstalledSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configDaliLoopInstalledSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configDaliLoopInstalledSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngiesSalidasInit
</UL>

<P><STRONG><a name="[117]"></a>configGatewayAddressGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configGatewayAddressGet))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverConTestActiveGet
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[b4]"></a>configGatewayAddressSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configGatewayAddressSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configGatewayAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[b5]"></a>configInit</STRONG> (Thumb, 392 bytes, Stack size 16 bytes, config.o(i.configInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = configInit &rArr; configTempInit &rArr; configTempSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTestInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempInit
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configReadSerialFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>configInputNotificationsGet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, config.o(i.configInputNotificationsGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethInputsNotifications_Tick
</UL>

<P><STRONG><a name="[ba]"></a>configInputNotificationsSet</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, config.o(i.configInputNotificationsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configInputNotificationsSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[bb]"></a>configInterfacesConfiguracionGet</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, config.o(i.configInterfacesConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = configInterfacesConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
</UL>

<P><STRONG><a name="[bc]"></a>configInterfacesConfiguracionSet</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, config.o(i.configInterfacesConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = configInterfacesConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionSet
</UL>

<P><STRONG><a name="[142]"></a>configInterfacesFinalizarConfiguracion</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configInterfacesFinalizarConfiguracion))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
</UL>

<P><STRONG><a name="[c0]"></a>configInterfacesIniciarConfiguracion</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, config.o(i.configInterfacesIniciarConfiguracion))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = configInterfacesIniciarConfiguracion &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
</UL>

<P><STRONG><a name="[121]"></a>configIpAddressGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configIpAddressGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[c2]"></a>configIpAddressSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configIpAddressSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configIpAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[168]"></a>configMantenedorPassGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configMantenedorPassGet))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[c3]"></a>configMantenedorPassSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configMantenedorPassSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configMantenedorPassSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[163]"></a>configNombreEdificioGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configNombreEdificioGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[c4]"></a>configNombreEdificioSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configNombreEdificioSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configNombreEdificioSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[164]"></a>configNombreLineaGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configNombreLineaGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[c5]"></a>configNombreLineaSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configNombreLineaSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configNombreLineaSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[b7]"></a>configReadSerialFromFlash</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, config.o(i.configReadSerialFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = configReadSerialFromFlash &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
</UL>

<P><STRONG><a name="[aa]"></a>configResetNetworkSettings</STRONG> (Thumb, 138 bytes, Stack size 96 bytes, config.o(i.configResetNetworkSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = configResetNetworkSettings &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressSet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioSet
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configMantenedorPassSet
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressSet
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInputNotificationsSet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressSet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configAdminPassSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraDoTask
</UL>

<P><STRONG><a name="[c7]"></a>configSensoresConfiguracionGet</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, config.o(i.configSensoresConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
</UL>

<P><STRONG><a name="[c8]"></a>configSensoresConfiguracionSet</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, config.o(i.configSensoresConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = configSensoresConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposToMatrizGruposGet
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionSet
</UL>

<P><STRONG><a name="[1b4]"></a>configSensoresFinalizarConfiguracion</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configSensoresFinalizarConfiguracion))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresFinalizarConfiguracion
</UL>

<P><STRONG><a name="[ca]"></a>configSensoresGruposConfiguracionGet</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, config.o(i.configSensoresGruposConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = configSensoresGruposConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>

<P><STRONG><a name="[cb]"></a>configSensoresGruposConfiguracionSet</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, config.o(i.configSensoresGruposConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = configSensoresGruposConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionSet
</UL>

<P><STRONG><a name="[cc]"></a>configSensoresIniciarConfiguracion</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, config.o(i.configSensoresIniciarConfiguracion))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = configSensoresIniciarConfiguracion &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresIniciarConfiguracion
</UL>

<P><STRONG><a name="[b1]"></a>configStoreInFlash</STRONG> (Thumb, 634 bytes, Stack size 1304 bytes, config.o(i.configStoreInFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fillBuffer
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempGet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempSet
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressSet
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioSet
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configMantenedorPassSet
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressSet
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInputNotificationsSet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressSet
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledSet
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopDeviceTypeSet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configAdminPassSet
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[d0]"></a>configStoreSerialToFlash</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, config.o(i.configStoreSerialToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = configStoreSerialToFlash &rArr; configReadSerialFromFlash &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configReadSerialFromFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iesSerialSet
</UL>

<P><STRONG><a name="[122]"></a>configSubmaskAddressGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, config.o(i.configSubmaskAddressGet))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[c6]"></a>configSubmaskAddressSet</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config.o(i.configSubmaskAddressSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configResetNetworkSettings
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[cf]"></a>configTempGet</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, config.o(i.configTempGet))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempDoTask
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempGet
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempCheck
</UL>

<P><STRONG><a name="[b8]"></a>configTempInit</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, config.o(i.configTempInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = configTempInit &rArr; configTempSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempSet
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInit
</UL>

<P><STRONG><a name="[d1]"></a>configTempSet</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, config.o(i.configTempSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = configTempSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempInit
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSet
</UL>

<P><STRONG><a name="[b9]"></a>configTestInit</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, config.o(i.configTestInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = configTestInit &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInit
</UL>

<P><STRONG><a name="[d3]"></a>dALSStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dals.o(i.dALSStart))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingLineScanStart
</UL>

<P><STRONG><a name="[d6]"></a>dANIStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dani.o(i.dANIStart))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNewInitialisationStart
</UL>

<P><STRONG><a name="[d9]"></a>dASEStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dase.o(i.dASEStart))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingSystemExtensionStart
</UL>

<P><STRONG><a name="[18e]"></a>daliAddressingGroupScanStart</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, daliaddressing.o(i.daliAddressingGroupScanStart))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[d2]"></a>daliAddressingLineScanStart</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, daliaddressing.o(i.daliAddressingLineScanStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = daliAddressingLineScanStart &rArr; daliAddressingNotify &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dALSStart
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[d5]"></a>daliAddressingNewInitialisationStart</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, daliaddressing.o(i.daliAddressingNewInitialisationStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = daliAddressingNewInitialisationStart &rArr; daliAddressingNotify &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dANIStart
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[d4]"></a>daliAddressingNotify</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, daliaddressing.o(i.daliAddressingNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = daliAddressingNotify &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngiesSalidasInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingSystemExtensionStart
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNewInitialisationStart
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingLineScanStart
</UL>

<P><STRONG><a name="[d8]"></a>daliAddressingSystemExtensionStart</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, daliaddressing.o(i.daliAddressingSystemExtensionStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = daliAddressingSystemExtensionStart &rArr; daliAddressingNotify &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dASEStart
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[89]"></a>daliLoopActualLevelGet</STRONG> (Thumb, 78 bytes, Stack size 208 bytes, daliloop.o(i.daliLoopActualLevelGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledGet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopDeviceTypeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
</UL>

<P><STRONG><a name="[82]"></a>daliLoopActualLevelSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, daliloop.o(i.daliLoopActualLevelSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = daliLoopActualLevelSet &rArr; daliLoopInstalledGet
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopInstalledGet
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>

<P><STRONG><a name="[88]"></a>daliLoopActualLevelValidGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, daliloop.o(i.daliLoopActualLevelValidGet))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
</UL>

<P><STRONG><a name="[dd]"></a>daliLoopDeviceTypeGet</STRONG> (Thumb, 66 bytes, Stack size 208 bytes, daliloop.o(i.daliLoopDeviceTypeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = daliLoopDeviceTypeGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledGet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopDeviceTypeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
</UL>

<P><STRONG><a name="[dc]"></a>daliLoopInstalledGet</STRONG> (Thumb, 28 bytes, Stack size 72 bytes, daliloop.o(i.daliLoopInstalledGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = daliLoopInstalledGet
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledGet
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelSet
</UL>

<P><STRONG><a name="[de]"></a>daliLoopValidByteGet</STRONG> (Thumb, 338 bytes, Stack size 232 bytes, daliloop.o(i.daliLoopValidByteGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = daliLoopValidByteGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledGet
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopDeviceTypeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
</UL>

<P><STRONG><a name="[67]"></a>daliSensoresComandoArcoDirectoEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresComandoArcoDirectoEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIcomandoArcoDirectoEnviar
</UL>

<P><STRONG><a name="[69]"></a>daliSensoresDownEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresDownEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIdownEnviar
</UL>

<P><STRONG><a name="[6b]"></a>daliSensoresGoToSceneEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresGoToSceneEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIgoToSceneEnviar
</UL>

<P><STRONG><a name="[6d]"></a>daliSensoresOffEnviar</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dalisensores.o(i.daliSensoresOffEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = daliSensoresOffEnviar &rArr; actualLevelCmdNotify &rArr; sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIoffEnviar
</UL>

<P><STRONG><a name="[6f]"></a>daliSensoresOnAndStepUpEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresOnAndStepUpEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIonAndStepUpEnviar
</UL>

<P><STRONG><a name="[1df]"></a>daliSensoresPollingEndTmpDisable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresPollingEndTmpDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionNotificar
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionDoTask
</UL>

<P><STRONG><a name="[1e1]"></a>daliSensoresPollingTmpDisable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresPollingTmpDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionNotificar
</UL>

<P><STRONG><a name="[71]"></a>daliSensoresQuerySensorStatusEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresQuerySensorStatusEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIquerySensorStatusEnviar
</UL>

<P><STRONG><a name="[73]"></a>daliSensoresRecallMaxLevelEnviar</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dalisensores.o(i.daliSensoresRecallMaxLevelEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = daliSensoresRecallMaxLevelEnviar &rArr; actualLevelCmdNotify &rArr; sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIrecallMaxLevelEnviar
</UL>

<P><STRONG><a name="[e0]"></a>daliSensoresSysTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dalisensores.o(i.daliSensoresSysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = daliSensoresSysTick
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDebugTransceptorLiberado
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresSysTick
</UL>

<P><STRONG><a name="[75]"></a>daliSensoresUpEnviar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dalisensores.o(i.daliSensoresUpEnviar))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIupEnviar
</UL>

<P><STRONG><a name="[e2]"></a>detPresFlancoAscendenteHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, inte_edig_detectorpresencia.o(i.detPresFlancoAscendenteHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = detPresFlancoAscendenteHandler &rArr; detPresPresency &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresPresency
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[f7]"></a>detPresInit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, inte_edig_detectorpresencia.o(i.detPresInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = detPresInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalInit
</UL>

<P><STRONG><a name="[e4]"></a>detPresNivelAltoHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, inte_edig_detectorpresencia.o(i.detPresNivelAltoHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = detPresNivelAltoHandler &rArr; detPresPresency &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresPresency
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[e5]"></a>detPresNivelBajoHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, inte_edig_detectorpresencia.o(i.detPresNivelBajoHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = detPresNivelBajoHandler &rArr; detPresVacancy &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresVacancy
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[e3]"></a>detPresPresency</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, inte_edig_detectorpresencia.o(i.detPresPresency))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = detPresPresency &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresNivelAltoHandler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresFlancoAscendenteHandler
</UL>

<P><STRONG><a name="[e6]"></a>detPresVacancy</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, inte_edig_detectorpresencia.o(i.detPresVacancy))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = detPresVacancy &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresNivelBajoHandler
</UL>

<P><STRONG><a name="[e8]"></a>disconnect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, socket.o(i.disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = disconnect &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[177]"></a>eBootloaderTransceiver_Write</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, embeddedbootloader.o(i.eBootloaderTransceiver_Write))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[e9]"></a>embeddedBootloaderGo</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, embeddedbootloader.o(i.embeddedBootloaderGo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = embeddedBootloaderGo &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[eb]"></a>embeddedBootloaderInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, embeddedbootloader.o(i.embeddedBootloaderInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = embeddedBootloaderInit &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>embeddedBootloaderRead</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, embeddedbootloader.o(i.embeddedBootloaderRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = embeddedBootloaderRead &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[16d]"></a>embeddedBootloaderReadStart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, embeddedbootloader.o(i.embeddedBootloaderReadStart))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[ee]"></a>embeddedBootloaderWrite</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, embeddedbootloader.o(i.embeddedBootloaderWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = embeddedBootloaderWrite &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[ef]"></a>embeddedBootloaderWriteStart</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, embeddedbootloader.o(i.embeddedBootloaderWriteStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = embeddedBootloaderWriteStart &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[f0]"></a>entradaDigitalDoTask</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, inte_entradadigital.o(i.entradaDigitalDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = entradaDigitalDoTask &rArr; pulsadorFlancoDescendenteHandler &rArr; pulsadorShortPress &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardGPIOPinValueGet
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorNivelAltoLargoHandler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorFlancoDescendenteHandler
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorFlancoAscendenteHandler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresNivelBajoHandler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresNivelAltoHandler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresFlancoAscendenteHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazDoTask
</UL>

<P><STRONG><a name="[f5]"></a>entradaDigitalInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, inte_entradadigital.o(i.entradaDigitalInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = entradaDigitalInit &rArr; detPresInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorInit
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresInit
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazInit
</UL>

<P><STRONG><a name="[f8]"></a>entradaDigitalTick</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, inte_entradadigital.o(i.entradaDigitalTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = entradaDigitalTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorTick
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazTick
</UL>

<P><STRONG><a name="[fa]"></a>ethDoTask</STRONG> (Thumb, 242 bytes, Stack size 528 bytes, ethframming.o(i.ethDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 2472<LI>Call Chain = ethDoTask &rArr; ethProcessFrame &rArr; normaLinkCfgInfoPasarelaT4 &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_SR
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_RX_RSR
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverTiempoSinRecibirCntRst
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[100]"></a>ethICMPDoTask</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ethping.o(i.ethICMPDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ethICMPDoTask &rArr; getSn_RX_RSR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_RX_RSR
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>ethICMPPingSend</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ethping.o(i.ethICMPPingSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ethICMPPingSend &rArr; _ping_request &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSn_PROTO
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickDelay
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ping_request
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[11b]"></a>ethICMPPongReceivedGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ethping.o(i.ethICMPPongReceivedGet))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[11c]"></a>ethICMPPongTimeoutGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ethping.o(i.ethICMPPongTimeoutGet))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[1ff]"></a>ethICMPTick</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ethping.o(i.ethICMPTick))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[105]"></a>ethInputsNotifications_Tick</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, ethtransceiver.o(i.ethInputsNotifications_Tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = ethInputsNotifications_Tick &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInputNotificationsGet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
</UL>

<P><STRONG><a name="[ff]"></a>ethProcessFrame</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, ethframming.o(i.ethProcessFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 1944<LI>Call Chain = ethProcessFrame &rArr; normaLinkCfgInfoPasarelaT4 &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkMasterPing
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDestCorrecto
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDaliUtilsT4
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDaliUtilsT3
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDaliUtilsT1
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T3
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T1
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
</UL>

<P><STRONG><a name="[d7]"></a>ethSendFrame</STRONG> (Thumb, 72 bytes, Stack size 328 bytes, ethframming.o(i.ethSendFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethInputsNotifications_Tick
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T3
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T1
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDoTask
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresEnviar
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNotify
</UL>

<P><STRONG><a name="[116]"></a>ethTransceiverConTestActiveGet</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ethtransceiver.o(i.ethTransceiverConTestActiveGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ethTransceiverConTestActiveGet
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressGet
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[118]"></a>ethTransceiverDoTask</STRONG> (Thumb, 528 bytes, Stack size 40 bytes, ethtransceiver.o(i.ethTransceiverDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4008<LI>Call Chain = ethTransceiverDoTask &rArr; webServerDoTask &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPongTimeoutGet
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPongReceivedGet
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPingSend
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressGet
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraFailLedBlink
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverConTestActiveGet
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15e]"></a>ethTransceiverInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ethtransceiver.o(i.ethTransceiverInit))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>ethTransceiverLAN_test</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ethtransceiver.o(i.ethTransceiverLAN_test))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverRTCC_Tick
</UL>

<P><STRONG><a name="[11f]"></a>ethTransceiverRTCC_Tick</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, ethtransceiver.o(i.ethTransceiverRTCC_Tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ethTransceiverRTCC_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverLAN_test
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesTick
</UL>

<P><STRONG><a name="[178]"></a>ethTransceiverReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ethtransceiver.o(i.ethTransceiverReset))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
</UL>

<P><STRONG><a name="[1fe]"></a>ethTransceiverTick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ethtransceiver.o(i.ethTransceiverTick))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[fd]"></a>ethTransceiverTiempoSinRecibirCntRst</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethtransceiver.o(i.ethTransceiverTiempoSinRecibirCntRst))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[11a]"></a>ethTransceiverW5100Init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, ethtransceiver.o(i.ethTransceiverW5100Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ethTransceiverW5100Init &rArr; socket &rArr; close &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSUBR
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSIPR
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSHAR
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setGAR
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iinchip_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applySUBR
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickDelay
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressGet
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressGet
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressGet
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[206]"></a>fallosFalloResetSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fallos.o(i.fallosFalloResetSet))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
</UL>

<P><STRONG><a name="[ce]"></a>fillBuffer</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, config.o(i.fillBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fillBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
</UL>

<P><STRONG><a name="[199]"></a>getIINCHIP_RxBASE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_RxBASE))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
</UL>

<P><STRONG><a name="[198]"></a>getIINCHIP_RxMASK</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_RxMASK))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
</UL>

<P><STRONG><a name="[19a]"></a>getIINCHIP_RxMAX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_RxMAX))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
</UL>

<P><STRONG><a name="[20f]"></a>getIINCHIP_TxBASE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_TxBASE))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>

<P><STRONG><a name="[20e]"></a>getIINCHIP_TxMASK</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_TxMASK))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>

<P><STRONG><a name="[1af]"></a>getIINCHIP_TxMAX</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, w5100.o(i.getIINCHIP_TxMAX))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[ae]"></a>getSIPR</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, w5100.o(i.getSIPR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getSIPR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearSUBR
</UL>

<P><STRONG><a name="[fc]"></a>getSn_RX_RSR</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, w5100.o(i.getSn_RX_RSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = getSn_RX_RSR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPDoTask
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[fb]"></a>getSn_SR</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w5100.o(i.getSn_SR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getSn_SR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[129]"></a>getSn_TX_FSR</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, w5100.o(i.getSn_TX_FSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = getSn_TX_FSR &rArr; IINCHIP_READ &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[12a]"></a>graba</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, idngies.o(i.graba))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = graba &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>

<P><STRONG><a name="[47]"></a>historicoAdd</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, historico.o(i.historicoAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = historicoAdd &rArr; historicoMapPtrUsedSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoPtrInc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoMapPtrUsedSet
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoFlashMemPosGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[12e]"></a>historicoDataGet</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, historico.o(i.historicoDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = historicoDataGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoFlashMemPosGet
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoRead
</UL>

<P><STRONG><a name="[12b]"></a>historicoFlashMemPosGet</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, historico.o(i.historicoFlashMemPosGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = historicoFlashMemPosGet
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoPtrInc
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoDataGet
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReadableEventsCntGet
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoRead
</UL>

<P><STRONG><a name="[12c]"></a>historicoMapPtrUsedSet</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, historico.o(i.historicoMapPtrUsedSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = historicoMapPtrUsedSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
</UL>

<P><STRONG><a name="[12d]"></a>historicoPtrInc</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, historico.o(i.historicoPtrInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = historicoPtrInc &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoFlashMemPosGet
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
</UL>

<P><STRONG><a name="[12f]"></a>historicoRead</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, historico.o(i.historicoRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = historicoRead &rArr; historicoDataGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoFlashMemPosGet
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[130]"></a>historicoReadableEventsCntGet</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, historico.o(i.historicoReadableEventsCntGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = historicoReadableEventsCntGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoFlashMemPosGet
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[131]"></a>historicoReset</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, historico.o(i.historicoReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = historicoReset &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[200]"></a>historicoTick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, historico.o(i.historicoTick))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[63]"></a>htons</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ethping.o(i.htons))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ping_request
</UL>

<P><STRONG><a name="[132]"></a>idgies_esquemaGpioInit</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, idngies.o(i.idgies_esquemaGpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = idgies_esquemaGpioInit
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardGPIODirSet
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>idngIesAddGroup</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, idngies.o(i.idngIesAddGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = idngIesAddGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>

<P><STRONG><a name="[df]"></a>idngIesCom</STRONG> (Thumb, 626 bytes, Stack size 64 bytes, idngies.o(i.idngIesCom))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = idngIesCom &rArr; graba &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesStoreScene
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesRemoveScene
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesRemoveGroup
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesAddGroup
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graba
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelAddressPerteneceGrupoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T3
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLink62386P102T1
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresRecallMaxLevelEnviar
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresOffEnviar
</UL>

<P><STRONG><a name="[138]"></a>idngIesDoTask</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, idngies.o(i.idngIesDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = idngIesDoTask &rArr; idngiesSalidasInit &rArr; configDaliLoopDeviceTypeSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazInit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngPowerOn
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idgies_esquemaGpioInit
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardGPIOPinValueSet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngiesSalidasInit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[137]"></a>idngIesRemoveGroup</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, idngies.o(i.idngIesRemoveGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = idngIesRemoveGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>

<P><STRONG><a name="[135]"></a>idngIesRemoveScene</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, idngies.o(i.idngIesRemoveScene))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>

<P><STRONG><a name="[1ad]"></a>idngIesRtcTick</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, idngies.o(i.idngIesRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
</UL>

<P><STRONG><a name="[134]"></a>idngIesStoreScene</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, idngies.o(i.idngIesStoreScene))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>

<P><STRONG><a name="[13d]"></a>idngPowerOn</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, idngies.o(i.idngPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = idngPowerOn &rArr; RTC_ReadBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13b]"></a>idngiesSalidasInit</STRONG> (Thumb, 148 bytes, Stack size 160 bytes, idngies.o(i.idngiesSalidasInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536<LI>Call Chain = idngiesSalidasInit &rArr; configDaliLoopDeviceTypeSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopInstalledSet
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configDaliLoopDeviceTypeSet
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT0
</UL>

<P><STRONG><a name="[13c]"></a>idngies_buscarInterfaces</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, idngies.o(i.idngies_buscarInterfaces))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = idngies_buscarInterfaces &rArr; interfacesConfiguracionSet &rArr; configInterfacesConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesIniciarConfiguracion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesFinalizarConfiguracion
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionSet
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionArrayFromStructGet
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[17e]"></a>iesSerialGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, idngies.o(i.iesSerialGet))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[143]"></a>iesSerialSet</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, idngies.o(i.iesSerialSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = iesSerialSet &rArr; configStoreSerialToFlash &rArr; configReadSerialFromFlash &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[123]"></a>iinchip_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, w5100.o(i.iinchip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = iinchip_init &rArr; setMR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMR
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[140]"></a>interfacesConfiguracionArrayFromStructGet</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, interfaces.o(i.interfacesConfiguracionArrayFromStructGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = interfacesConfiguracionArrayFromStructGet &rArr; arrayPush
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPush
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
</UL>

<P><STRONG><a name="[147]"></a>interfacesConfiguracionGet</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, interfaces.o(i.interfacesConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = interfacesConfiguracionGet &rArr; configInterfacesConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionGet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePop
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesNotificar
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDoTask
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesInit
</UL>

<P><STRONG><a name="[141]"></a>interfacesConfiguracionSet</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interfaces.o(i.interfacesConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = interfacesConfiguracionSet &rArr; configInterfacesConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
</UL>

<P><STRONG><a name="[14a]"></a>interfacesDoTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, interfaces.o(i.interfacesDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = interfacesDoTask &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesNotificar
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresDoTask
</UL>

<P><STRONG><a name="[14b]"></a>interfacesIDNGIESEventoGet</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, interfaces.o(i.interfacesIDNGIESEventoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = interfacesIDNGIESEventoGet
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSolicitar
</UL>

<P><STRONG><a name="[14c]"></a>interfacesInit</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, interfaces.o(i.interfacesInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = interfacesInit &rArr; interfacesConfiguracionGet &rArr; configInterfacesConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
</UL>

<P><STRONG><a name="[98]"></a>interfacesNotificar</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, interfaces.o(i.interfacesNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSolicitar
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardDoTask
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesDoTask
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>

<P><STRONG><a name="[1f5]"></a>interfacesRtcTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interfaces.o(i.interfacesRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresRtcTick
</UL>

<P><STRONG><a name="[1f7]"></a>interfacesSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interfaces.o(i.interfacesSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresSysTick
</UL>

<P><STRONG><a name="[150]"></a>interfazDoTask</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, interfaz.o(i.interfazDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 884<LI>Call Chain = interfazDoTask &rArr; entradaDigitalDoTask &rArr; pulsadorFlancoDescendenteHandler &rArr; pulsadorShortPress &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>interfazEventoGenerar</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, interfaz.o(i.interfazEventoGenerar))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesNotificar
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorShortPress
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresVacancy
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detPresPresency
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorNivelAltoLargoHandler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorFlancoDescendenteHandler
</UL>

<P><STRONG><a name="[139]"></a>interfazInit</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, interfaz.o(i.interfazInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = interfazInit &rArr; entradaDigitalInit &rArr; detPresInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalInit
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[151]"></a>interfazTick</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interfaz.o(i.interfazTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = interfazTick &rArr; entradaDigitalTick
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalTick
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[152]"></a>listen</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, socket.o(i.listen))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = listen &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[b6]"></a>m25pReadBytes</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, m25p.o(i.m25pReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTestInit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempInit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionGet
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionGet
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configReadSerialFromFlash
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionGet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoMapPtrUsedSet
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoDataGet
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageRead
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageIdGet
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReadableEventsCntGet
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoRead
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderRead
</UL>

<P><STRONG><a name="[c1]"></a>m25pSectorErase</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, m25p.o(i.m25pSectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresIniciarConfiguracion
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesIniciarConfiguracion
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWriteStart
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWriteStart
</UL>

<P><STRONG><a name="[bf]"></a>m25pStatusRead</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, m25p.o(i.m25pStatusRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = m25pStatusRead &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresIniciarConfiguracion
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionSet
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesIniciarConfiguracion
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionSet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoPtrInc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoMapPtrUsedSet
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWriteStart
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadWriteFinish
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWriteStart
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWrite
</UL>

<P><STRONG><a name="[be]"></a>m25pWriteBytes</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, m25p.o(i.m25pWriteBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionSet
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionSet
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionSet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoPtrInc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoMapPtrUsedSet
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadWriteFinish
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWrite
</UL>

<P><STRONG><a name="[bd]"></a>m25pWriteEnable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, m25p.o(i.m25pWriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = m25pWriteEnable &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_m25p
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_m25p
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoAdd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreSerialToFlash
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresIniciarConfiguracion
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionSet
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionSet
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesIniciarConfiguracion
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInterfacesConfiguracionSet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT5
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoPtrInc
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoMapPtrUsedSet
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWriteStart
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWrite
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadWriteFinish
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWriteStart
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWrite
</UL>

<P><STRONG><a name="[155]"></a>macInit</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, ethtransceiver.o(i.macInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = macInit &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 4008<LI>Call Chain = main &rArr; ethTransceiverDoTask &rArr; webServerDoTask &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtDoTask
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempInit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempDoTask
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickDelay
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresDoTask
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;macInit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazInit
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazDoTask
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngPowerOn
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idgies_esquemaGpioInit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPDoTask
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraDoTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardDoTask
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindDoTask
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_MemoryRemapConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[10b]"></a>normaLink62386P102T1</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, normalink62386p102.o(i.normaLink62386P102T1))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = normaLink62386P102T1 &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[10d]"></a>normaLink62386P102T3</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, normalink62386p102.o(i.normaLink62386P102T3))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = normaLink62386P102T3 &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[107]"></a>normaLinkCfgInfoPasarelaT0</STRONG> (Thumb, 1820 bytes, Stack size 400 bytes, normalinkcfginfopasarela.o(i.normaLinkCfgInfoPasarelaT0))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = normaLinkCfgInfoPasarelaT0 &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearGet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthGet
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesGet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourGet
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDayGet
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaGet
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioGet
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configMantenedorPassGet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configAdminPassGet
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressGet
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressGet
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressGet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWriteStart
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadWriteFinish
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageReadStart
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageIdGet
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReset
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoReadableEventsCntGet
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWriteStart
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderReadStart
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderRead
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdayGet
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsGet
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[110]"></a>normaLinkCfgInfoPasarelaT4</STRONG> (Thumb, 1504 bytes, Stack size 552 bytes, normalinkcfginfopasarela.o(i.normaLinkCfgInfoPasarelaT4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920<LI>Call Chain = normaLinkCfgInfoPasarelaT4 &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressSet
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioSet
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configMantenedorPassSet
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressSet
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configGatewayAddressSet
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configAdminPassSet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageWrite
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storageRead
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoRead
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderWrite
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;embeddedBootloaderGo
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eBootloaderTransceiver_Write
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccYearSet
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdaySet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsSet
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMonthSet
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesSet
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourSet
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccDaySet
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[108]"></a>normaLinkCmdPasarelaT0</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, normalinkcmdpasarela.o(i.normaLinkCmdPasarelaT0))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = normaLinkCmdPasarelaT0 &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverReset
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtReboot
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDaliAccesoExclusivoABusEnable
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkDaliAccesoExclusivoABusDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[10f]"></a>normaLinkCmdPasarelaT5</STRONG> (Thumb, 250 bytes, Stack size 296 bytes, normalinkcmdpasarela.o(i.normaLinkCmdPasarelaT5))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = normaLinkCmdPasarelaT5 &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[17a]"></a>normaLinkDaliAccesoExclusivoABusDisable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, normalink.o(i.normaLinkDaliAccesoExclusivoABusDisable))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
</UL>

<P><STRONG><a name="[179]"></a>normaLinkDaliAccesoExclusivoABusEnable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, normalink.o(i.normaLinkDaliAccesoExclusivoABusEnable))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
</UL>

<P><STRONG><a name="[10c]"></a>normaLinkDaliUtilsT1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, normalinkdaliutils.o(i.normaLinkDaliUtilsT1))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[10e]"></a>normaLinkDaliUtilsT3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, normalinkdaliutils.o(i.normaLinkDaliUtilsT3))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[112]"></a>normaLinkDaliUtilsT4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, normalinkdaliutils.o(i.normaLinkDaliUtilsT4))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[10a]"></a>normaLinkDestCorrecto</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, normalink.o(i.normaLinkDestCorrecto))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[114]"></a>normaLinkIES</STRONG> (Thumb, 1590 bytes, Stack size 80 bytes, normalinkies.o(i.normaLinkIES))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = normaLinkIES &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupIES_Set
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16Push
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16Pop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindPositionGet
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindParametersSet
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindParametersGet
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpUp
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpStop
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpStepUp
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpStepDown
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpGotoPos
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindOpDown
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupIES_Get
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iesSerialSet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iesSerialGet
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[115]"></a>normaLinkMasterPing</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, normalink.o(i.normaLinkMasterPing))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[113]"></a>normaLinkSensores</STRONG> (Thumb, 1432 bytes, Stack size 248 bytes, normalinksensores.o(i.normaLinkSensores))
<BR><BR>[Stack]<UL><LI>Max Depth = 964<LI>Call Chain = normaLinkSensores &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPush
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16Push
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresPeticionNiveles
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresMatrizGruposToGrupoGet
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresIniciarConfiguracion
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresFinalizarConfiguracion
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionSet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngies_buscarInterfaces
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPop
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionSet
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePop
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionSet
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[e1]"></a>normaLinkSensoresDebugTransceptorLiberado</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, normalinksensores.o(i.normaLinkSensoresDebugTransceptorLiberado))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresSysTick
</UL>

<P><STRONG><a name="[18d]"></a>normaLinkSensoresDoTask</STRONG> (Thumb, 422 bytes, Stack size 112 bytes, normalinksensores.o(i.normaLinkSensoresDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = normaLinkSensoresDoTask &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPush
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesConfiguracionGet
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresDoTask
</UL>

<P><STRONG><a name="[14f]"></a>normaLinkSensoresEnviar</STRONG> (Thumb, 254 bytes, Stack size 96 bytes, normalinksensores.o(i.normaLinkSensoresEnviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = normaLinkSensoresEnviar &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPush
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSolicitar
</UL>

<P><STRONG><a name="[1f8]"></a>normaLinkSensoresSysTick</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, normalinksensores.o(i.normaLinkSensoresSysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = normaLinkSensoresSysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresSysTick
</UL>

<P><STRONG><a name="[109]"></a>normaLinkSingleLoopT0</STRONG> (Thumb, 496 bytes, Stack size 176 bytes, normalinksingleloop.o(i.normaLinkSingleLoopT0))
<BR><BR>[Stack]<UL><LI>Max Depth = 1712<LI>Call Chain = normaLinkSingleLoopT0 &rArr; idngiesSalidasInit &rArr; configDaliLoopDeviceTypeSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopValidByteGet
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopInstalledGet
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopDeviceTypeGet
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliLoopActualLevelGet
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngiesSalidasInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[111]"></a>normaLinkSingleLoopT4</STRONG> (Thumb, 820 bytes, Stack size 72 bytes, normalinksingleloop.o(i.normaLinkSingleLoopT4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = normaLinkSingleLoopT4 &rArr; tempSet &rArr; configTempSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;belongsGroupSet
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;belongsGroupGet
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testSet
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testGet
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSet
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempGet
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qSNRead
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingSystemExtensionStart
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingNewInitialisationStart
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingLineScanStart
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliAddressingGroupScanStart
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePush
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPush
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethProcessFrame
</UL>

<P><STRONG><a name="[1ab]"></a>normaLinkTick</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, normalink.o(i.normaLinkTick))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesTick
</UL>

<P><STRONG><a name="[f2]"></a>pulsadorFlancoAscendenteHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, inte_edig_pulsador.o(i.pulsadorFlancoAscendenteHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = pulsadorFlancoAscendenteHandler &rArr; pulsadorShortPress &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorShortPress
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[f4]"></a>pulsadorFlancoDescendenteHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, inte_edig_pulsador.o(i.pulsadorFlancoDescendenteHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = pulsadorFlancoDescendenteHandler &rArr; pulsadorShortPress &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorShortPress
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[f6]"></a>pulsadorInit</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, inte_edig_pulsador.o(i.pulsadorInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pulsadorInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalInit
</UL>

<P><STRONG><a name="[f3]"></a>pulsadorNivelAltoLargoHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, inte_edig_pulsador.o(i.pulsadorNivelAltoLargoHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = pulsadorNivelAltoLargoHandler &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalDoTask
</UL>

<P><STRONG><a name="[f9]"></a>pulsadorTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inte_edig_pulsador.o(i.pulsadorTick))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;entradaDigitalTick
</UL>

<P><STRONG><a name="[190]"></a>qSNRead</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, qsn.o(i.qSNRead))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[197]"></a>read_data</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, w5100.o(i.read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_data &rArr; wiz_read_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_read_buf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_RxMAX
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_RxMASK
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_RxBASE
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_data_processing
</UL>

<P><STRONG><a name="[fe]"></a>recv</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, socket.o(i.recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = recv &rArr; recv_data_processing &rArr; read_data &rArr; wiz_read_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_data_processing
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[19c]"></a>recv_data_processing</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, w5100.o(i.recv_data_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = recv_data_processing &rArr; read_data &rArr; wiz_read_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
</UL>

<P><STRONG><a name="[46]"></a>rtccDayGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccDayGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtccDayGet &rArr; RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[16f]"></a>rtccDaySet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccDaySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rtccDaySet &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[43]"></a>rtccHourGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccHourGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtccHourGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempCheck
</UL>

<P><STRONG><a name="[172]"></a>rtccHourSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccHourSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rtccHourSet &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[15d]"></a>rtccInit</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, rtcc.o(i.rtccInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rtccInit &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CalibOutputCmd
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AlarmStructInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AlarmCmd
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>rtccMinutesGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccMinutesGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtccMinutesGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempCheck
</UL>

<P><STRONG><a name="[173]"></a>rtccMinutesSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccMinutesSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rtccMinutesSet &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[1a8]"></a>rtccMinutesTick</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtcc.o(i.rtccMinutesTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rtccMinutesTick &rArr; tempCheck &rArr; rtccMinutesGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverRTCC_Tick
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;testRTCC_Tick
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempCheck
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkTick
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
</UL>

<P><STRONG><a name="[45]"></a>rtccMonthGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccMonthGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtccMonthGet &rArr; RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[170]"></a>rtccMonthSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccMonthSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rtccMonthSet &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[166]"></a>rtccSecondsGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccSecondsGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtccSecondsGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[174]"></a>rtccSecondsSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccSecondsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rtccSecondsSet &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[52]"></a>rtccSecondsTick</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtcc.o(i.rtccSecondsTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = rtccSecondsTick &rArr; ethInputsNotifications_Tick &rArr; ethSendFrame &rArr; sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethInputsNotifications_Tick
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresRtcTick
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesRtcTick
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[165]"></a>rtccWeekdayGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccWeekdayGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtccWeekdayGet &rArr; RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempCheck
</UL>

<P><STRONG><a name="[16e]"></a>rtccWeekdaySet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccWeekdaySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rtccWeekdaySet &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[44]"></a>rtccYearGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rtcc.o(i.rtccYearGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtccYearGet &rArr; RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[171]"></a>rtccYearSet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rtcc.o(i.rtccYearSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = rtccYearSet &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[1ae]"></a>send</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, socket.o(i.send))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = send &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_processing
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_TX_FSR
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_TxMAX
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
</UL>

<P><STRONG><a name="[1b0]"></a>send_data_processing</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, w5100.o(i.send_data_processing))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>

<P><STRONG><a name="[65]"></a>sendto</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, socket.o(i.sendto))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = sendto &rArr; send_data_processing &rArr; write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_processing
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_TxMAX
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearSUBR
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applySUBR
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethSendFrame
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ping_request
</UL>

<P><STRONG><a name="[86]"></a>sensoresCambioActualLevelNotificar</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sensores.o(i.sensoresCambioActualLevelNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = sensoresCambioActualLevelNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
</UL>

<P><STRONG><a name="[184]"></a>sensoresConfiguracionGet</STRONG> (Thumb, 196 bytes, Stack size 88 bytes, sensores.o(i.sensoresConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = sensoresConfiguracionGet &rArr; configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionGet
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayPop
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16Pop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePop
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaInit
</UL>

<P><STRONG><a name="[189]"></a>sensoresConfiguracionSet</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i.sensoresConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sensoresConfiguracionSet &rArr; configSensoresConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[162]"></a>sensoresDoTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sensores.o(i.sensoresDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = sensoresDoTask &rArr; interfacesDoTask &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresDoTask
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesDoTask
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18b]"></a>sensoresFinalizarConfiguracion</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sensores.o(i.sensoresFinalizarConfiguracion))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = sensoresFinalizarConfiguracion &rArr; sensoresInit &rArr; sensoresGruposInit &rArr; sensoresGruposDetectoresPresenciaInit &rArr; sensoresConfiguracionGet &rArr; configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresFinalizarConfiguracion
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[187]"></a>sensoresGruposConfiguracionGet</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, sensoresgrupos.o(i.sensoresGruposConfiguracionGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sensoresGruposConfiguracionGet &rArr; configSensoresGruposConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionGet
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16Pop
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bytePop
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaNotificar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaNotificar
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteNotificar
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaNotificar
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaDoTask
</UL>

<P><STRONG><a name="[18a]"></a>sensoresGruposConfiguracionSet</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensoresgrupos.o(i.sensoresGruposConfiguracionSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sensoresGruposConfiguracionSet &rArr; configSensoresGruposConfiguracionSet &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresGruposConfiguracionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[1bc]"></a>sensoresGruposDetectoresPresenciaDoTask</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = sensoresGruposDetectoresPresenciaDoTask &rArr; sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunEquipoApagadoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1d5]"></a>sensoresGruposDetectoresPresenciaEstadoGet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaEstadoGet))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1be]"></a>sensoresGruposDetectoresPresenciaInit</STRONG> (Thumb, 232 bytes, Stack size 120 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = sensoresGruposDetectoresPresenciaInit &rArr; sensoresConfiguracionGet &rArr; configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoGet
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1c0]"></a>sensoresGruposDetectoresPresenciaNotificar</STRONG> (Thumb, 210 bytes, Stack size 128 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1d6]"></a>sensoresGruposDetectoresPresenciaReiteracionPeriodoCntReinicializar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaReiteracionPeriodoCntReinicializar))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
</UL>

<P><STRONG><a name="[1e8]"></a>sensoresGruposDetectoresPresenciaRtcTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1ef]"></a>sensoresGruposDetectoresPresenciaSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1b3]"></a>sensoresGruposDoTask</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, sensoresgrupos.o(i.sensoresGruposDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = sensoresGruposDoTask &rArr; sensoresGruposDetectoresPresenciaDoTask &rArr; sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzDoTask
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaDoTask
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionDoTask
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaDoTask
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteDoTask
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaDoTask
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIupEnviar
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIrecallMaxLevelEnviar
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIquerySensorStatusEnviar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIonAndStepUpEnviar
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIoffEnviar
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIgoToSceneEnviar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIdownEnviar
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresDALIcomandoArcoDirectoEnviar
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresDoTask
</UL>

<P><STRONG><a name="[1c7]"></a>sensoresGruposInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sensoresgrupos.o(i.sensoresGruposInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = sensoresGruposInit &rArr; sensoresGruposDetectoresPresenciaInit &rArr; sensoresConfiguracionGet &rArr; configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaInit
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaInit
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteInit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
</UL>

<P><STRONG><a name="[1cd]"></a>sensoresGruposNotificar</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, sensoresgrupos.o(i.sensoresGruposNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzNotificar
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaNotificar
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionNotificar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaNotificar
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteNotificar
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaNotificar
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
</UL>

<P><STRONG><a name="[1c3]"></a>sensoresGruposPulsadoresAccionBasculanteDoTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteDoTask))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1c9]"></a>sensoresGruposPulsadoresAccionBasculanteInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteInit))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1cf]"></a>sensoresGruposPulsadoresAccionBasculanteNotificar</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = sensoresGruposPulsadoresAccionBasculanteNotificar &rArr; sensoresGruposPulsadoresAccionBasculanteAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1e6]"></a>sensoresGruposPulsadoresAccionBasculanteRtcTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1ed]"></a>sensoresGruposPulsadoresAccionBasculanteSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1c2]"></a>sensoresGruposPulsadoresAccionFijaDoTask</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaDoTask))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1c8]"></a>sensoresGruposPulsadoresAccionFijaInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaInit))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1ce]"></a>sensoresGruposPulsadoresAccionFijaNotificar</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = sensoresGruposPulsadoresAccionFijaNotificar &rArr; sensoresGruposPulsadoresAccionFijaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1e5]"></a>sensoresGruposPulsadoresAccionFijaRtcTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1ec]"></a>sensoresGruposPulsadoresAccionFijaSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1c6]"></a>sensoresGruposPulsadoresAccionRegulacionDoTask</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sensoresGruposPulsadoresAccionRegulacionDoTask &rArr; sensoresGruposPulsadoresAccionRegulacionActualizarNivel &rArr; sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresPollingEndTmpDisable
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionActualizarNivel
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionQuerySensorStatusSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1d4]"></a>sensoresGruposPulsadoresAccionRegulacionEstadoGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionEstadoGet))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1cc]"></a>sensoresGruposPulsadoresAccionRegulacionInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sensoresGruposPulsadoresAccionRegulacionInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1d1]"></a>sensoresGruposPulsadoresAccionRegulacionNotificar</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sensoresGruposPulsadoresAccionRegulacionNotificar
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresPollingTmpDisable
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresPollingEndTmpDisable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionOnAndStepUpSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1ea]"></a>sensoresGruposPulsadoresAccionRegulacionRtcTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1f1]"></a>sensoresGruposPulsadoresAccionRegulacionSysTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1c4]"></a>sensoresGruposPulsadoresAccionTemporizadaDoTask</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = sensoresGruposPulsadoresAccionTemporizadaDoTask &rArr; sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1b8]"></a>sensoresGruposPulsadoresAccionTemporizadaEstadoGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaEstadoGet))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
</UL>

<P><STRONG><a name="[1ca]"></a>sensoresGruposPulsadoresAccionTemporizadaInit</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sensoresGruposPulsadoresAccionTemporizadaInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1d0]"></a>sensoresGruposPulsadoresAccionTemporizadaNotificar</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = sensoresGruposPulsadoresAccionTemporizadaNotificar &rArr; sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1e7]"></a>sensoresGruposPulsadoresAccionTemporizadaRtcTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1ee]"></a>sensoresGruposPulsadoresAccionTemporizadaSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1c5]"></a>sensoresGruposReguladoresLuzDoTask</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sensoresGruposReguladoresLuzDoTask &rArr; sensoresGruposReguladoresLuzAccionSolicitar &rArr; _sensoresGruposAccionDAPCSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDoTask
</UL>

<P><STRONG><a name="[1b2]"></a>sensoresGruposReguladoresLuzEstadoActualizar</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzEstadoActualizar))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunEquipoApagadoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzNotificar
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresCambioActualLevelNotificar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1b7]"></a>sensoresGruposReguladoresLuzEstadoGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzEstadoGet))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaAccionSolicitar
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteAccionSolicitar
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar
</UL>

<P><STRONG><a name="[1da]"></a>sensoresGruposReguladoresLuzInhibir</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzInhibir))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>

<P><STRONG><a name="[1cb]"></a>sensoresGruposReguladoresLuzInit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sensoresGruposReguladoresLuzInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
</UL>

<P><STRONG><a name="[1d2]"></a>sensoresGruposReguladoresLuzNotificar</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = sensoresGruposReguladoresLuzNotificar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzAccionSolicitar
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposForMeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
</UL>

<P><STRONG><a name="[1e9]"></a>sensoresGruposReguladoresLuzRtcTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzRtcTick))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>

<P><STRONG><a name="[1f0]"></a>sensoresGruposReguladoresLuzSysTick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
</UL>

<P><STRONG><a name="[1e4]"></a>sensoresGruposRtcTick</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sensoresgrupos.o(i.sensoresGruposRtcTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sensoresGruposRtcTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzRtcTick
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaRtcTick
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionRtcTick
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaRtcTick
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteRtcTick
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaRtcTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresRtcTick
</UL>

<P><STRONG><a name="[1eb]"></a>sensoresGruposSysTick</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sensoresgrupos.o(i.sensoresGruposSysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sensoresGruposSysTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzSysTick
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaSysTick
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionSysTick
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaSysTick
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteSysTick
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaSysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresSysTick
</UL>

<P><STRONG><a name="[c9]"></a>sensoresGruposToMatrizGruposGet</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, sensores.o(i.sensoresGruposToMatrizGruposGet))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresConfiguracionSet
</UL>

<P><STRONG><a name="[188]"></a>sensoresIniciarConfiguracion</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sensores.o(i.sensoresIniciarConfiguracion))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sensoresIniciarConfiguracion &rArr; configSensoresIniciarConfiguracion &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSensoresIniciarConfiguracion
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[13a]"></a>sensoresInit</STRONG> (Thumb, 120 bytes, Stack size 96 bytes, sensores.o(i.sensoresInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = sensoresInit &rArr; sensoresGruposInit &rArr; sensoresGruposDetectoresPresenciaInit &rArr; sensoresConfiguracionGet &rArr; configSensoresConfiguracionGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresMatrizGruposToGrupoGet
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesInit
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposInit
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoSet
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAlgunoOperativoClear
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesDoTask
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresFinalizarConfiguracion
</UL>

<P><STRONG><a name="[186]"></a>sensoresMatrizGruposToGrupoGet</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, sensores.o(i.sensoresMatrizGruposToGrupoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sensoresMatrizGruposToGrupoGet
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[14e]"></a>sensoresNotificar</STRONG> (Thumb, 152 bytes, Stack size 184 bytes, sensores.o(i.sensoresNotificar))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numeroSerieIdCoincideGet
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposNotificar
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSolicitar
</UL>

<P><STRONG><a name="[18c]"></a>sensoresPeticionNiveles</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, sensores.o(i.sensoresPeticionNiveles))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = sensoresPeticionNiveles &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevel_GrupoValoresGet
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
</UL>

<P><STRONG><a name="[1ac]"></a>sensoresRtcTick</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sensores.o(i.sensoresRtcTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sensoresRtcTick &rArr; sensoresGruposRtcTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesRtcTick
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposRtcTick
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccSecondsTick
</UL>

<P><STRONG><a name="[1f6]"></a>sensoresSysTick</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sensores.o(i.sensoresSysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sensoresSysTick &rArr; normaLinkSensoresSysTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresSysTick
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesSysTick
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposSysTick
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;daliSensoresSysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickTick
</UL>

<P><STRONG><a name="[124]"></a>setGAR</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, w5100.o(i.setGAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setGAR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[144]"></a>setMR</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w5100.o(i.setMR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setMR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iinchip_init
</UL>

<P><STRONG><a name="[125]"></a>setSHAR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, w5100.o(i.setSHAR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setSHAR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[127]"></a>setSIPR</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, w5100.o(i.setSIPR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setSIPR &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[126]"></a>setSUBR</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, w5100.o(i.setSUBR))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[102]"></a>setSn_PROTO</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w5100.o(i.setSn_PROTO))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setSn_PROTO &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPingSend
</UL>

<P><STRONG><a name="[17b]"></a>setupIES_Get</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, idngies.o(i.setupIES_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setupIES_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[ab]"></a>setupIES_Set</STRONG> (Thumb, 198 bytes, Stack size 20 bytes, idngies.o(i.setupIES_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = setupIES_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraDoTask
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[103]"></a>socket</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, socket.o(i.socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = socket &rArr; close &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPingSend
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[153]"></a>spiIINCHIP_CSoff_m25p</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi2.o(i.spiIINCHIP_CSoff_m25p))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiIINCHIP_CSoff_m25p
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>

<P><STRONG><a name="[49]"></a>spiIINCHIP_CSoff_w5100</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi2.o(i.spiIINCHIP_CSoff_w5100))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiIINCHIP_CSoff_w5100
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_write_buf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_read_buf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>

<P><STRONG><a name="[154]"></a>spiIINCHIP_CSon_m25p</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi2.o(i.spiIINCHIP_CSon_m25p))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiIINCHIP_CSon_m25p
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>

<P><STRONG><a name="[4c]"></a>spiIINCHIP_CSon_w5100</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, spi2.o(i.spiIINCHIP_CSon_w5100))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiIINCHIP_CSon_w5100
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_write_buf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_read_buf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
</UL>

<P><STRONG><a name="[4b]"></a>spiIINCHIP_SpiRecvData</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, spi2.o(i.spiIINCHIP_SpiRecvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spiIINCHIP_SpiRecvData
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetReceptionFIFOStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_read_buf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>

<P><STRONG><a name="[4a]"></a>spiIINCHIP_SpiSendData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, spi2.o(i.spiIINCHIP_SpiSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_write_buf
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_read_buf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_READ
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>

<P><STRONG><a name="[16b]"></a>storageIdGet</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, storage.o(i.storageIdGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = storageIdGet &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[175]"></a>storageRead</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, storage.o(i.storageRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = storageRead &rArr; m25pReadBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[169]"></a>storageReadStart</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, storage.o(i.storageReadStart))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[16c]"></a>storageReadWriteFinish</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, storage.o(i.storageReadWriteFinish))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = storageReadWriteFinish &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[176]"></a>storageWrite</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, storage.o(i.storageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = storageWrite &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteBytes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT4
</UL>

<P><STRONG><a name="[16a]"></a>storageWriteStart</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, storage.o(i.storageWriteStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = storageWriteStart &rArr; m25pSectorErase &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pWriteEnable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pStatusRead
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m25pSectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCfgInfoPasarelaT0
</UL>

<P><STRONG><a name="[7c]"></a>strindex</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, webserver.o(i.strindex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = strindex &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverUtilsStringFromBufferGet
</UL>

<P><STRONG><a name="[104]"></a>sysTickDelay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, systick.o(i.sysTickDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPPingSend
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[60]"></a>sysTickTick</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, systick.o(i.sysTickTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sysTickTick &rArr; interfazTick &rArr; entradaDigitalTick
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boardTick
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverTick
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresSysTick
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazTick
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blindTick
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethICMPTick
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;historicoTick
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[128]"></a>sysinit</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, w5100.o(i.sysinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sysinit &rArr; IINCHIP_WRITE &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IINCHIP_WRITE
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverW5100Init
</UL>

<P><STRONG><a name="[1aa]"></a>tempCheck</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, temp.o(i.tempCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tempCheck &rArr; rtccMinutesGet &rArr; RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesGet
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccHourGet
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempGet
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccWeekdayGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesTick
</UL>

<P><STRONG><a name="[161]"></a>tempDoTask</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, temp.o(i.tempDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tempDoTask &rArr; idngIesCom &rArr; graba &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempGet
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempPacketIdGet
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[192]"></a>tempGet</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, temp.o(i.tempGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tempGet
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempGet
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[15f]"></a>tempInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temp.o(i.tempInit))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[204]"></a>tempPacketIdGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temp.o(i.tempPacketIdGet))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempDoTask
</UL>

<P><STRONG><a name="[193]"></a>tempSet</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, temp.o(i.tempSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384<LI>Call Chain = tempSet &rArr; configTempSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configTempSet
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[194]"></a>testGet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, test.o(i.testGet))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[1a9]"></a>testRTCC_Tick</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.testRTCC_Tick))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtccMinutesTick
</UL>

<P><STRONG><a name="[195]"></a>testSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.testSet))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSingleLoopT4
</UL>

<P><STRONG><a name="[17d]"></a>uint16Pop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, utils.o(i.uint16Pop))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresConfiguracionGet
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>

<P><STRONG><a name="[17c]"></a>uint16Push</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utils.o(i.uint16Push))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensores
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkIES
</UL>

<P><STRONG><a name="[160]"></a>wdtDoTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wdt.o(i.wdtDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wdtDoTask
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15c]"></a>wdtInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wdt.o(i.wdtInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wdtInit
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fallosFalloResetSet
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>wdtReboot</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdt.o(i.wdtReboot))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;botoneraDoTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webServerDoTask
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkCmdPasarelaT0
</UL>

<P><STRONG><a name="[11e]"></a>webServerDoTask</STRONG> (Thumb, 2154 bytes, Stack size 2600 bytes, webserver.o(i.webServerDoTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 3968<LI>Call Chain = webServerDoTask &rArr; configSubmaskAddressSet &rArr; configStoreInFlash &rArr; m25pWriteBytes &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_SR
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSn_RX_RSR
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listen
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnect
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTickDelay
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressSet
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configStoreInFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaSet
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreLineaGet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioSet
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configNombreEdificioGet
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressSet
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInputNotificationsSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configAdminPassGet
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configSubmaskAddressGet
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configIpAddressGet
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;configInputNotificationsGet
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverTiempoSinRecibirCntRst
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strindex
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverUtilsStringToIp
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverUtilsStringFromBufferGet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_webserverPrintIp
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtReboot
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idngIesCom
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethTransceiverDoTask
</UL>

<P><STRONG><a name="[19b]"></a>wiz_read_buf</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, w5100.o(i.wiz_read_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wiz_read_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_w5100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiRecvData
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_data
</UL>

<P><STRONG><a name="[20d]"></a>wiz_write_buf</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, w5100.o(i.wiz_write_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSon_w5100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_CSoff_w5100
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiIINCHIP_SpiSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>

<P><STRONG><a name="[1b1]"></a>write_data</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, w5100.o(i.write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = write_data &rArr; wiz_write_buf &rArr; spiIINCHIP_SpiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wiz_write_buf
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_TxMASK
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_TxBASE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIINCHIP_TxMAX
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_processing
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[61]"></a>SetSysClock</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1b5]"></a>sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaNotificar
</UL>

<P><STRONG><a name="[1b6]"></a>sensoresGruposDetectoresPresenciaAccionSolicitar</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoGet
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionRecallMaxLevelSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionOffSet
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionDAPCSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaDoTask
</UL>

<P><STRONG><a name="[1bd]"></a>sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, sensoresgruposdetectorespresencia.o(i.sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = sensoresGruposDetectoresPresenciaModoFlancoEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaAccionSolicitar
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposConfiguracionGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaNotificar
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaDoTask
</UL>

<P><STRONG><a name="[1d3]"></a>sensoresGruposPulsadoresAccionBasculanteAccionSolicitar</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, sensoresgrupospulsadoresaccionbasculante.o(i.sensoresGruposPulsadoresAccionBasculanteAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = sensoresGruposPulsadoresAccionBasculanteAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionEstadoGet
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoGet
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaReiteracionPeriodoCntReinicializar
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionRecallMaxLevelSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionOffSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionBasculanteNotificar
</UL>

<P><STRONG><a name="[1d7]"></a>sensoresGruposPulsadoresAccionFijaAccionSolicitar</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, sensoresgrupospulsadoresaccionfija.o(i.sensoresGruposPulsadoresAccionFijaAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = sensoresGruposPulsadoresAccionFijaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionEstadoGet
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoGet
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaReiteracionPeriodoCntReinicializar
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionRecallMaxLevelSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionOffSet
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionGoToSceneSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionFijaNotificar
</UL>

<P><STRONG><a name="[1d9]"></a>sensoresGruposPulsadoresAccionRegulacionAccionSolicitar</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzInhibir
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoGet
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaReiteracionPeriodoCntReinicializar
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionUpSet
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionDownSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionActualizarNivel
</UL>

<P><STRONG><a name="[1dd]"></a>sensoresGruposPulsadoresAccionRegulacionActualizarNivel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, sensoresgrupospulsadoresaccionregulacion.o(i.sensoresGruposPulsadoresAccionRegulacionActualizarNivel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sensoresGruposPulsadoresAccionRegulacionActualizarNivel &rArr; sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionAccionSolicitar
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionQuerySensorStatusSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionDoTask
</UL>

<P><STRONG><a name="[1e3]"></a>sensoresGruposReguladoresLuzAccionSolicitar</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, sensoresgruposreguladoresluz.o(i.sensoresGruposReguladoresLuzAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sensoresGruposReguladoresLuzAccionSolicitar &rArr; _sensoresGruposAccionDAPCSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionEstadoGet
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaEstadoGet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionDAPCSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzNotificar
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzDoTask
</UL>

<P><STRONG><a name="[14d]"></a>interfacesSolicitar</STRONG> (Thumb, 124 bytes, Stack size 72 bytes, interfaces.o(i.interfacesSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normaLinkSensoresEnviar
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesIDNGIESEventoGet
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfacesNotificar
</UL>

<P><STRONG><a name="[1f4]"></a>numeroSerieIdCoincideGet</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, sensores.o(i.numeroSerieIdCoincideGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = numeroSerieIdCoincideGet
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresNotificar
</UL>

<P><STRONG><a name="[80]"></a>actualLevelDestTipoGet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, actuallevel.o(i.actualLevelDestTipoGet))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGruposAfectadosGet
</UL>

<P><STRONG><a name="[83]"></a>actualLevelGrupoGet</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, actuallevel.o(i.actualLevelGrupoGet))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelCmdNotify
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actualLevelGruposAfectadosGet
</UL>

<P><STRONG><a name="[1e2]"></a>sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, sensoresgrupospulsadoresacciontemporizada.o(i.sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = sensoresGruposPulsadoresAccionTemporizadaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoActualizar
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionRegulacionEstadoGet
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposReguladoresLuzEstadoGet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposDetectoresPresenciaEstadoGet
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionRecallMaxLevelSet
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sensoresGruposAccionOffSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaNotificar
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensoresGruposPulsadoresAccionTemporizadaDoTask
</UL>

<P><STRONG><a name="[4f]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[59]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
</UL>

<P><STRONG><a name="[196]"></a>pulsadorShortPress</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, inte_edig_pulsador.o(i.pulsadorShortPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = pulsadorShortPress &rArr; interfazEventoGenerar &rArr; interfacesNotificar &rArr; interfacesSolicitar &rArr; sensoresNotificar &rArr; sensoresGruposNotificar &rArr; sensoresGruposDetectoresPresenciaNotificar &rArr; sensoresGruposDetectoresPreseciaModoNivelEstadoActualizar &rArr; sensoresGruposDetectoresPresenciaAccionSolicitar &rArr; sensoresGruposReguladoresLuzEstadoActualizar &rArr; _sensoresGruposAlgunEquipoApagadoGet &rArr; actualLevel_GrupoValoresGet &rArr; daliLoopActualLevelGet &rArr; configDaliLoopDeviceTypeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interfazEventoGenerar
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorFlancoDescendenteHandler
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pulsadorFlancoAscendenteHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
